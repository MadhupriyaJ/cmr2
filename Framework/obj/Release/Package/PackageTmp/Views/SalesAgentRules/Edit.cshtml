@model FramWork.Models.Commision_SalesAgentRules

@{
    ViewBag.Title = "Lead2Deal | SalesAgentRules Edit";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
    FramWork.Models.FrameworkEntities db = new FramWork.Models.FrameworkEntities();
}

<ul class="page-breadcrumb breadcrumb">
    <li>
        <a href="@Url.Content("~/")Home/Index">Home</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <a href="#">Sales</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <a href="#">Commission</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <a href="#">Edit Sales Agent Rules</a>
    </li>

</ul>
<div class="portlet light bordered">
    <div class="portlet-title">
        <div class="caption font-yellow-crusta">
            <i class="icon-pin font-yellow-crusta"></i>
            <span class="caption-subject bold uppercase"> Edit Sales Agent Rules</span>

        </div>
        <div class="actions">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
            <a href="#" class="btn btn-circle btn-default btn-icon-only fullscreen green" style="color:white;" data-original-title="" title=""></a>
        </div>
    </div>
    <div class="portlet-body">


        @using (Html.BeginForm("Edit", "SalesAgentRules", FormMethod.Post,
                            new { id = "mainForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreateDate)
    @Html.HiddenFor(model => model.ModifiedDate)

    <div class="form-horizontal">
        <div class="form-body">
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label">Team<span class="required">*</span></label>
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.TeamId, new SelectList(db.Teams.Select(a => new { Id = a.Id, Name = a.Name }), "Id", "Name"),  new { @id = "TeamId", @name = "TeamId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TeamId)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label">Sales Agent<span class="required">*</span></label>
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.SalesAgentId, new SelectList(db.Users.Select(a => new { Id = a.Id, Name = a.UserName }), "Id", "Name"),  new { @id = "SalesAgentId", @name = "SalesAgentId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SalesAgentId)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label">Campaign Product<span class="required">*</span></label>
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.ProductId, new SelectList(db.CampaignProducts.Select(a => new { Id = a.Id, Name = a.ProductName }), "Id", "Name"),  new { @id = "ProductId", @name = "ProductId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProductId)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label">Min Commision<span class="required">*</span></label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MinCommision, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MinCommision)
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <div class="col-md-4">
                            <label class="control-label">Max Commision<span class="required">*</span></label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.MaxCommision, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaxCommision)
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br />
        <div class="form-actions" align="right">
            <input type="submit" value="Save" class="btn btn-primary" />
            <input type="button" id="btnreset" value="Reset" class="btn btn-default" />
        </div>
    </div>
        }
    </div>
</div>


@section Scripts{
    <script type="text/javascript" src="@Url.Content("~/")assets/global/plugins/jquery-validation/js/jquery.validate.min.js"></script>
    <script type="text/javascript" src="@Url.Content("~/")assets/global/plugins/jquery-validation/js/additional-methods.min.js"></script>

    <script language="javascript">

        $(document).ready(function () {

            $('#mainForm').validate({
                errorElement: 'span',
                errorClass: 'help-block help-block-error',
                rules: {
                    TeamId: "required",
                    SalesAgentId: "required",
                    ProductId: "required",
                    MinCommision: "required number",
                    MaxCommision: "required number"

                },
                highlight: function (element) {
                    // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                },
                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                submitHandler: function (form) {
                    form.submit();

                }

            });

              $('#btnreset').live('click', function () {
                $('#mainForm')[0].reset();
            });

            $("#mainForm").submit(function (event) {
                //disable the default form submission
                event.preventDefault();

                var isValid = $("#mainForm").valid();
                if (!isValid)
                    return false;
            });


        });
    </script>
}




